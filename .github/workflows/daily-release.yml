name: Daily Release

on:
  schedule:
    - cron: "0 16 * * *" # 每天UTC 16:00 (北京时间 0:00)
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Get current date
        id: date
        shell: bash
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "DATE_START=$(date -d "$(date +%Y-%m-%d)T00:00:00" +%s)" >> $GITHUB_OUTPUT
          echo "DATE_END=$(date -d "$(date +%Y-%m-%d)T23:59:59" +%s)" >> $GITHUB_OUTPUT

      - name: Count commits today
        id: commit_count
        shell: bash
        run: |
          DATE_START="${{ steps.date.outputs.DATE_START }}"
          DATE_END="${{ steps.date.outputs.DATE_END }}"
          COUNT=$(git log --since="@${DATE_START}" --until="@${DATE_END}" --pretty=format:'%H' | wc -l)
          echo "count=$COUNT" >> $GITHUB_OUTPUT

      - name: Skip if no commits today (except manual)
        if: github.event_name == 'schedule' && steps.commit_count.outputs.count == '0'
        run: echo "No commits today. Skipping build." && exit 0
        shell: bash

      - name: Set version tag
        id: version
        shell: bash
        run: |
          VERSION="v${{ steps.date.outputs.DATE }}-${{ steps.commit_count.outputs.count }}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          mkdir -p dist
          go mod tidy
          go build -v -o dist/server-tools.exe ./exe/main.go

      - name: Install GitHub CLI
        run: choco install gh -y
        shell: powershell

      - name: Delete old release (only for daily)
        if: github.event_name == 'schedule'
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete "nightly" --yes || true
          git push origin :nightly || true

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "nightly" dist/server-tools.exe `
            --title "server-tools ${{ steps.version.outputs.VERSION }}" `
            --notes "dayz-server-tools" `
